{
    "swagger": "2.0",
    "info": {
        "title": "Todo API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Check if server is running",
                "produces": [
                    "application/json"
                ],
                "responses": {}
            }
        },
        "/auth/login": {
            "post": {
                "description": "Log in using email and password. Returns a raw JWT token string.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT access token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid login data or wrong credentials",
                        "schema": {
                            "$ref": "#/definitions/middleware.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal failure during token generation",
                        "schema": {
                            "$ref": "#/definitions/middleware.ApiError"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Creates a new user account with email and password",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "Registration payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.CreateAccountParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created account ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/todo": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new todo item for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "Create a new todo",
                "parameters": [
                    {
                        "description": "Todo data",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/todo.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID of the created todo",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request or duplicate title",
                        "schema": {
                            "$ref": "#/definitions/middleware.ApiError"
                        }
                    }
                }
            }
        },
        "/todo/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific todo by its UUID and validates ownership.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "Get todo data by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Todo UUID (v4)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Todo data returned",
                        "schema": {
                            "$ref": "#/definitions/database.Todo"
                        }
                    },
                    "400": {
                        "description": "Bad request or not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ApiError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Partially updates an existing todo; only supplied fields are changed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo"
                ],
                "summary": "Update a todo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Todo UUID v4",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update (optional)",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/todo.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK â€” no content returned",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid payload or update error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequest": {
            "description": "Payload for /auth/login: user's email and password.",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "database.CreateAccountParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "database.Priority": {
            "type": "string",
            "enum": [
                "low",
                "medium",
                "high"
            ],
            "x-enum-varnames": [
                "PriorityLow",
                "PriorityMedium",
                "PriorityHigh"
            ]
        },
        "database.Todo": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isDone": {
                    "type": "boolean"
                },
                "priority": {
                    "$ref": "#/definitions/database.Priority"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "middleware.ApiError": {
            "description": "HTTP-level error response wrapper.",
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "todo.CreateRequest": {
            "description": "Payload for POST /todo",
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Milk, bread, and eggs"
                },
                "priority": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/database.Priority"
                        }
                    ],
                    "example": "high"
                },
                "title": {
                    "type": "string",
                    "example": "Buy groceries"
                }
            }
        },
        "todo.UpdateRequest": {
            "description": "Payload for PATCH /todo/{id}",
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}