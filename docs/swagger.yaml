basePath: /
definitions:
  auth.LoginRequest:
    description: 'Payload for /auth/login: user''s email and password.'
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  database.CreateAccountParams:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  database.Priority:
    enum:
    - low
    - medium
    - high
    type: string
    x-enum-varnames:
    - PriorityLow
    - PriorityMedium
    - PriorityHigh
  database.Todo:
    properties:
      accountId:
        type: string
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      isDone:
        type: boolean
      priority:
        $ref: '#/definitions/database.Priority'
      title:
        type: string
    type: object
  middleware.ApiError:
    description: HTTP-level error response wrapper.
    properties:
      details:
        additionalProperties: {}
        type: object
      message:
        type: string
    type: object
  todo.CreateRequest:
    description: Payload for POST /todo
    properties:
      content:
        type: string
      priority:
        $ref: '#/definitions/database.Priority'
      title:
        type: string
    type: object
info:
  contact: {}
  title: Todo API
  version: "1.0"
paths:
  /:
    get:
      description: Check if server is running
      produces:
      - application/json
      responses: {}
  /auth/login:
    post:
      consumes:
      - application/json
      description: Log in using email and password. Returns a raw JWT token string.
      parameters:
      - description: Login credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: JWT access token
          schema:
            type: string
        "400":
          description: Invalid login data or wrong credentials
          schema:
            $ref: '#/definitions/middleware.ApiError'
        "500":
          description: Internal failure during token generation
          schema:
            $ref: '#/definitions/middleware.ApiError'
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account with email and password
      parameters:
      - description: Registration payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/database.CreateAccountParams'
      responses:
        "200":
          description: Created account ID
          schema:
            type: string
      summary: Create a new account
      tags:
      - auth
  /todo:
    post:
      consumes:
      - application/json
      description: Create a new todo
      parameters:
      - description: Todo data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/todo.CreateRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a new todo
      tags:
      - todo
  /todo/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific todo by its UUID and validates ownership.
      parameters:
      - description: Todo UUID (v4)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Todo data returned
          schema:
            $ref: '#/definitions/database.Todo'
        "400":
          description: Bad request or not found
          schema:
            $ref: '#/definitions/middleware.ApiError'
      security:
      - BearerAuth: []
      summary: Get todo data by ID
      tags:
      - todo
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
